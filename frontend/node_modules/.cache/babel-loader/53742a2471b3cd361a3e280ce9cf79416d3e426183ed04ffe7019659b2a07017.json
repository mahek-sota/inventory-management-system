{"ast":null,"code":"var _jsxFileName = \"/Users/maheksota/Desktop/django-project/frontend/src/Dashboard/ItemDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ItemDashboard = () => {\n  _s();\n  const [counts, setCounts] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [sortedByName, setSortedByName] = useState(false);\n  const [originalTableData, setOriginalTableData] = useState([]);\n\n  // Function to sort items by name\n  const sortItemsByName = () => {\n    // Check if tableData is already sorted by name\n    if (sortedByName) {\n      // If already sorted, revert the order to the original state\n      setTableData(originalTableData);\n      setSortedByName(false);\n    } else {\n      // If not sorted, sort the data by name\n      const sortedItems = [...tableData].sort((a, b) => a.name.localeCompare(b.name));\n      setTableData(sortedItems);\n      setSortedByName(true);\n    }\n  };\n  useEffect(() => {\n    const fetchCounts = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/djangoApp/count/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch counts');\n        }\n        const data = await response.json();\n        setCounts(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching counts:', error);\n      }\n    };\n    const fetchTableData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/djangoApp/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch table data');\n        }\n        const data = await response.json();\n        setTableData(data);\n        setOriginalTableData(data); // Set original data\n      } catch (error) {\n        console.error('Error fetching table data:', error);\n      }\n    };\n    fetchCounts();\n    fetchTableData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sortItemsByName,\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Count of Unique Categories: \", counts.unique_categories_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Count of Rows in the Table: \", counts.total_rows_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SKU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"In Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Available Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.sku\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.tags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.in_stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.available_stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ItemDashboard, \"yrR3xasoRB2hJiEQQBKEf7/rJ5g=\");\n_c = ItemDashboard;\nexport default ItemDashboard;\nvar _c;\n$RefreshReg$(_c, \"ItemDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemDashboard","_s","counts","setCounts","tableData","setTableData","sortedByName","setSortedByName","originalTableData","setOriginalTableData","sortItemsByName","sortedItems","sort","a","b","name","localeCompare","fetchCounts","response","fetch","ok","Error","data","json","console","log","error","fetchTableData","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","unique_categories_count","total_rows_count","map","row","index","sku","tags","category","in_stock","available_stock","_c","$RefreshReg$"],"sources":["/Users/maheksota/Desktop/django-project/frontend/src/Dashboard/ItemDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ItemDashboard = () => {\n  const [counts, setCounts] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [sortedByName, setSortedByName] = useState(false);\n  const [originalTableData, setOriginalTableData] = useState([]);\n\n  // Function to sort items by name\n  const sortItemsByName = () => {\n    // Check if tableData is already sorted by name\n    if (sortedByName) {\n      // If already sorted, revert the order to the original state\n      setTableData(originalTableData);\n      setSortedByName(false);\n    } else {\n      // If not sorted, sort the data by name\n      const sortedItems = [...tableData].sort((a, b) => a.name.localeCompare(b.name));\n      setTableData(sortedItems);\n      setSortedByName(true);\n    }\n  };\n\n  useEffect(() => {\n    const fetchCounts = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/djangoApp/count/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch counts');\n        }\n        const data = await response.json();\n        setCounts(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching counts:', error);\n      }\n    };\n\n    const fetchTableData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/djangoApp/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch table data');\n        }\n        const data = await response.json();\n        setTableData(data);\n        setOriginalTableData(data); // Set original data\n      } catch (error) {\n        console.error('Error fetching table data:', error);\n      }\n    };\n\n    fetchCounts();\n    fetchTableData();\n  }, []);\n\n  return (\n    <>\n      <div className='flexContainer'>\n        <div>\n          <button onClick={sortItemsByName}>Sort</button>\n          <p>Total Count of Unique Categories: {counts.unique_categories_count}</p>\n          <p>Total Count of Rows in the Table: {counts.total_rows_count}</p>\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th>SKU</th>\n              <th>Name</th>\n              <th>Tags</th>\n              <th>Category</th>\n              <th>In Stock</th>\n              <th>Available Stock</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableData.map((row, index) => (\n              <tr key={index}>\n                <td>{row.sku}</td>\n                <td>{row.name}</td>\n                <td>{row.tags}</td>\n                <td>{row.category}</td>\n                <td>{row.in_stock}</td>\n                <td>{row.available_stock}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default ItemDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}