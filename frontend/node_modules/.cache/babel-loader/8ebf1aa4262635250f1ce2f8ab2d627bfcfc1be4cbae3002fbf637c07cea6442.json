{"ast":null,"code":"var _jsxFileName = \"/Users/maheksota/Desktop/django-project/frontend/src/Dashboard/ItemDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ItemDashboard = () => {\n  _s();\n  const [counts, setCounts] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortedByName, setSortedByName] = useState(false);\n  const [originalTableData, setOriginalTableData] = useState([]);\n  const handleChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const sortItemsByName = () => {\n    // Check if tableData is already sorted by name\n    if (sortedByName) {\n      // If already sorted, revert the order to the original state\n      setTableData(originalTableData);\n      setSortedByName(false);\n    } else {\n      // If not sorted, sort the data by name\n      const sortedItems = [...tableData].sort((a, b) => a.name.localeCompare(b.name));\n      setTableData(sortedItems);\n      setSortedByName(true);\n    }\n  };\n  useEffect(() => {\n    const fetchCounts = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/djangoApp/count/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch counts');\n        }\n        const data = await response.json();\n        setCounts(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching counts:', error);\n      }\n    };\n    const fetchTableData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/djangoApp/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch table data');\n        }\n        const data = await response.json();\n        setTableData(data);\n        setOriginalTableData(data); // Initialize original data\n        setFilteredData(data); // Initialize filtered data\n      } catch (error) {\n        console.error('Error fetching table data:', error);\n      }\n    };\n    fetchCounts();\n    fetchTableData();\n  }, []);\n  useEffect(() => {\n    // Filter tableData based on searchQuery\n    const filteredItems = originalTableData.filter(item => item.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    setFilteredData(filteredItems);\n\n    // If tableData was sorted by name, re-sort the filtered data\n    if (sortedByName) {\n      const sortedItems = [...filteredItems].sort((a, b) => a.name.localeCompare(b.name));\n      setFilteredData(sortedItems);\n    }\n  }, [searchQuery, originalTableData, sortedByName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by name...\",\n          value: searchQuery,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sortItemsByName,\n          children: sortedByName ? 'Unsort' : 'Sort by Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Count of Unique Categories: \", counts.unique_categories_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Count of Rows in the Table: \", counts.total_rows_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SKU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"In Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Available Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.sku\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.tags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.in_stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.available_stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ItemDashboard, \"E6kt3z63/fEOtszafJLVOOP6Z0A=\");\n_c = ItemDashboard;\nexport default ItemDashboard;\nvar _c;\n$RefreshReg$(_c, \"ItemDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemDashboard","_s","counts","setCounts","tableData","setTableData","filteredData","setFilteredData","searchQuery","setSearchQuery","sortedByName","setSortedByName","originalTableData","setOriginalTableData","handleChange","event","target","value","sortItemsByName","sortedItems","sort","a","b","name","localeCompare","fetchCounts","response","fetch","ok","Error","data","json","console","log","error","fetchTableData","filteredItems","filter","item","toLowerCase","includes","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","unique_categories_count","total_rows_count","map","row","index","sku","tags","category","in_stock","available_stock","_c","$RefreshReg$"],"sources":["/Users/maheksota/Desktop/django-project/frontend/src/Dashboard/ItemDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ItemDashboard = () => {\n  const [counts, setCounts] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortedByName, setSortedByName] = useState(false);\n  const [originalTableData, setOriginalTableData] = useState([]);\n\n  const handleChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const sortItemsByName = () => {\n    // Check if tableData is already sorted by name\n    if (sortedByName) {\n      // If already sorted, revert the order to the original state\n      setTableData(originalTableData);\n      setSortedByName(false);\n    } else {\n      // If not sorted, sort the data by name\n      const sortedItems = [...tableData].sort((a, b) => a.name.localeCompare(b.name));\n      setTableData(sortedItems);\n      setSortedByName(true);\n    }\n  };\n\n  useEffect(() => {\n    const fetchCounts = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/djangoApp/count/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch counts');\n        }\n        const data = await response.json();\n        setCounts(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching counts:', error);\n      }\n    };\n\n    const fetchTableData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/djangoApp/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch table data');\n        }\n        const data = await response.json();\n        setTableData(data);\n        setOriginalTableData(data); // Initialize original data\n        setFilteredData(data); // Initialize filtered data\n      } catch (error) {\n        console.error('Error fetching table data:', error);\n      }\n    };\n\n    fetchCounts();\n    fetchTableData();\n  }, []);\n\n  useEffect(() => {\n    // Filter tableData based on searchQuery\n    const filteredItems = originalTableData.filter(item =>\n      item.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredData(filteredItems);\n\n    // If tableData was sorted by name, re-sort the filtered data\n    if (sortedByName) {\n      const sortedItems = [...filteredItems].sort((a, b) => a.name.localeCompare(b.name));\n      setFilteredData(sortedItems);\n    }\n  }, [searchQuery, originalTableData, sortedByName]);\n\n  return (\n    <>\n      <div className='flexContainer'>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Search by name...\"\n            value={searchQuery}\n            onChange={handleChange}\n          />\n          <button onClick={sortItemsByName}>\n            {sortedByName ? 'Unsort' : 'Sort by Name'}\n          </button>\n          <p>Total Count of Unique Categories: {counts.unique_categories_count}</p>\n          <p>Total Count of Rows in the Table: {counts.total_rows_count}</p>\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th>SKU</th>\n              <th>Name</th>\n              <th>Tags</th>\n              <th>Category</th>\n              <th>In Stock</th>\n              <th>Available Stock</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredData.map((row, index) => (\n              <tr key={index}>\n                <td>{row.sku}</td>\n                <td>{row.name}</td>\n                <td>{row.tags}</td>\n                <td>{row.category}</td>\n                <td>{row.in_stock}</td>\n                <td>{row.available_stock}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default ItemDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMoB,YAAY,GAAIC,KAAK,IAAK;IAC9BN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA,IAAIR,YAAY,EAAE;MAChB;MACAL,YAAY,CAACO,iBAAiB,CAAC;MAC/BD,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC,MAAM;MACL;MACA,MAAMQ,WAAW,GAAG,CAAC,GAAGf,SAAS,CAAC,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC;MAC/ElB,YAAY,CAACc,WAAW,CAAC;MACzBR,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAM8B,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC5B,SAAS,CAAC2B,IAAI,CAAC;QACfE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QACpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC1B,YAAY,CAACyB,IAAI,CAAC;QAClBjB,oBAAoB,CAACiB,IAAI,CAAC,CAAC,CAAC;QAC5BvB,eAAe,CAACuB,IAAI,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDT,WAAW,CAAC,CAAC;IACbU,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAENxC,SAAS,CAAC,MAAM;IACd;IACA,MAAMyC,aAAa,GAAGxB,iBAAiB,CAACyB,MAAM,CAACC,IAAI,IACjDA,IAAI,CAACf,IAAI,CAACgB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChC,WAAW,CAAC+B,WAAW,CAAC,CAAC,CAC5D,CAAC;IACDhC,eAAe,CAAC6B,aAAa,CAAC;;IAE9B;IACA,IAAI1B,YAAY,EAAE;MAChB,MAAMS,WAAW,GAAG,CAAC,GAAGiB,aAAa,CAAC,CAAChB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC;MACnFhB,eAAe,CAACY,WAAW,CAAC;IAC9B;EACF,CAAC,EAAE,CAACX,WAAW,EAAEI,iBAAiB,EAAEF,YAAY,CAAC,CAAC;EAElD,oBACEb,OAAA,CAAAE,SAAA;IAAA0C,QAAA,eACE5C,OAAA;MAAK6C,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5B5C,OAAA;QAAA4C,QAAA,gBACE5C,OAAA;UACE8C,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,mBAAmB;UAC/B3B,KAAK,EAAET,WAAY;UACnBqC,QAAQ,EAAE/B;QAAa;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFpD,OAAA;UAAQqD,OAAO,EAAEhC,eAAgB;UAAAuB,QAAA,EAC9B/B,YAAY,GAAG,QAAQ,GAAG;QAAc;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACTpD,OAAA;UAAA4C,QAAA,GAAG,oCAAkC,EAACvC,MAAM,CAACiD,uBAAuB;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzEpD,OAAA;UAAA4C,QAAA,GAAG,oCAAkC,EAACvC,MAAM,CAACkD,gBAAgB;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACNpD,OAAA;QAAA4C,QAAA,gBACE5C,OAAA;UAAA4C,QAAA,eACE5C,OAAA;YAAA4C,QAAA,gBACE5C,OAAA;cAAA4C,QAAA,EAAI;YAAG;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZpD,OAAA;cAAA4C,QAAA,EAAI;YAAI;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbpD,OAAA;cAAA4C,QAAA,EAAI;YAAI;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbpD,OAAA;cAAA4C,QAAA,EAAI;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBpD,OAAA;cAAA4C,QAAA,EAAI;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBpD,OAAA;cAAA4C,QAAA,EAAI;YAAe;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRpD,OAAA;UAAA4C,QAAA,EACGnC,YAAY,CAAC+C,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC3B1D,OAAA;YAAA4C,QAAA,gBACE5C,OAAA;cAAA4C,QAAA,EAAKa,GAAG,CAACE;YAAG;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClBpD,OAAA;cAAA4C,QAAA,EAAKa,GAAG,CAAC/B;YAAI;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnBpD,OAAA;cAAA4C,QAAA,EAAKa,GAAG,CAACG;YAAI;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnBpD,OAAA;cAAA4C,QAAA,EAAKa,GAAG,CAACI;YAAQ;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBpD,OAAA;cAAA4C,QAAA,EAAKa,GAAG,CAACK;YAAQ;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBpD,OAAA;cAAA4C,QAAA,EAAKa,GAAG,CAACM;YAAe;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GANvBM,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACN,CAAC;AAEP,CAAC;AAAChD,EAAA,CArHID,aAAa;AAAA6D,EAAA,GAAb7D,aAAa;AAuHnB,eAAeA,aAAa;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}